/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package comws.flau.ci.dao;

import java.util.Date;
import comws.flau.ci.dto.*;
import comws.flau.ci.exceptions.*;

public interface VciElenco001Dao
{
	/** 
	 * Returns all rows from the vci_elenco001 table that match the criteria ''.
	 */
	public VciElenco001[] findAll() throws VciElenco001DaoException;

	/** 
	 * Returns all rows from the vci_elenco001 table that match the criteria 'PRG_UTE = :prgUte'.
	 */
	public VciElenco001[] findWherePrgUteEquals(int prgUte) throws VciElenco001DaoException;

	/** 
	 * Returns all rows from the vci_elenco001 table that match the criteria 'DES_UTE = :desUte'.
	 */
	public VciElenco001[] findWhereDesUteEquals(String desUte) throws VciElenco001DaoException;

	/** 
	 * Returns all rows from the vci_elenco001 table that match the criteria 'COD_FISCALE = :codFiscale'.
	 */
	public VciElenco001[] findWhereCodFiscaleEquals(String codFiscale) throws VciElenco001DaoException;

	/** 
	 * Returns all rows from the vci_elenco001 table that match the criteria 'DES_IND_EMAIL = :desIndEmail'.
	 */
	public VciElenco001[] findWhereDesIndEmailEquals(String desIndEmail) throws VciElenco001DaoException;

	/** 
	 * Returns all rows from the vci_elenco001 table that match the criteria 'DES_IND_EMAIL_ALT = :desIndEmailAlt'.
	 */
	public VciElenco001[] findWhereDesIndEmailAltEquals(String desIndEmailAlt) throws VciElenco001DaoException;

	/** 
	 * Returns all rows from the vci_elenco001 table that match the criteria 'DES_PSW = :desPsw'.
	 */
	public VciElenco001[] findWhereDesPswEquals(String desPsw) throws VciElenco001DaoException;

	/** 
	 * Returns all rows from the vci_elenco001 table that match the criteria 'DES_FILE_LDAP = :desFileLdap'.
	 */
	public VciElenco001[] findWhereDesFileLdapEquals(String desFileLdap) throws VciElenco001DaoException;

	/** 
	 * Returns all rows from the vci_elenco001 table that match the criteria 'COD_PGM_ULT_MOV = :codPgmUltMov'.
	 */
	public VciElenco001[] findWhereCodPgmUltMovEquals(String codPgmUltMov) throws VciElenco001DaoException;

	/** 
	 * Returns all rows from the vci_elenco001 table that match the criteria 'COD_UTE_ULT_MOV = :codUteUltMov'.
	 */
	public VciElenco001[] findWhereCodUteUltMovEquals(String codUteUltMov) throws VciElenco001DaoException;

	/** 
	 * Returns all rows from the vci_elenco001 table that match the criteria 'DAT_ORA_ULT_MOV = :datOraUltMov'.
	 */
	public VciElenco001[] findWhereDatOraUltMovEquals(Date datOraUltMov) throws VciElenco001DaoException;

	/** 
	 * Returns all rows from the vci_elenco001 table that match the criteria 'FLG_VAL_UTE = :flgValUte'.
	 */
	public VciElenco001[] findWhereFlgValUteEquals(String flgValUte) throws VciElenco001DaoException;

	/** 
	 * Returns all rows from the vci_elenco001 table that match the criteria 'DES_COG = :desCog'.
	 */
	public VciElenco001[] findWhereDesCogEquals(String desCog) throws VciElenco001DaoException;

	/** 
	 * Returns all rows from the vci_elenco001 table that match the criteria 'DES_NOM = :desNom'.
	 */
	public VciElenco001[] findWhereDesNomEquals(String desNom) throws VciElenco001DaoException;

	/** 
	 * Returns all rows from the vci_elenco001 table that match the criteria 'pr = :pr'.
	 */
	public VciElenco001[] findWherePrEquals(int pr) throws VciElenco001DaoException;

	/** 
	 * Returns all rows from the vci_elenco001 table that match the criteria 'iddipendente = :iddipendente'.
	 */
	public VciElenco001[] findWhereIddipendenteEquals(int iddipendente) throws VciElenco001DaoException;

	/** 
	 * Returns all rows from the vci_elenco001 table that match the criteria 'Commessa = :commessa'.
	 */
	public VciElenco001[] findWhereCommessaEquals(String commessa) throws VciElenco001DaoException;

	/** 
	 * Returns all rows from the vci_elenco001 table that match the criteria 'allocato = :allocato'.
	 */
	public VciElenco001[] findWhereAllocatoEquals(String allocato) throws VciElenco001DaoException;

	/** 
	 * Returns all rows from the vci_elenco001 table that match the criteria 'full-time = :fullTime'.
	 */
	public VciElenco001[] findWhereFullTimeEquals(String fullTime) throws VciElenco001DaoException;

	/** 
	 * Returns all rows from the vci_elenco001 table that match the criteria 'reparto = :reparto'.
	 */
	public VciElenco001[] findWhereRepartoEquals(String reparto) throws VciElenco001DaoException;

	/** 
	 * Returns all rows from the vci_elenco001 table that match the criteria 'PercentualeCIGO = :percentualeCIGO'.
	 */
	public VciElenco001[] findWherePercentualeCIGOEquals(int percentualeCIGO) throws VciElenco001DaoException;

	/** 
	 * Returns all rows from the vci_elenco001 table that match the criteria 'datainizio = :datainizio'.
	 */
	public VciElenco001[] findWhereDatainizioEquals(Date datainizio) throws VciElenco001DaoException;

	/** 
	 * Returns all rows from the vci_elenco001 table that match the criteria 'datafine = :datafine'.
	 */
	public VciElenco001[] findWhereDatafineEquals(Date datafine) throws VciElenco001DaoException;

	/** 
	 * Returns all rows from the vci_elenco001 table that match the criteria 'datarientroanticipato = :datarientroanticipato'.
	 */
	public VciElenco001[] findWhereDatarientroanticipatoEquals(Date datarientroanticipato) throws VciElenco001DaoException;

	/** 
	 * Returns all rows from the vci_elenco001 table that match the criteria 'formazione = :formazione'.
	 */
	public VciElenco001[] findWhereFormazioneEquals(String formazione) throws VciElenco001DaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the vci_elenco001 table that match the specified arbitrary SQL statement
	 */
	public VciElenco001[] findByDynamicSelect(String sql, Object[] sqlParams) throws VciElenco001DaoException;

	/** 
	 * Returns all rows from the vci_elenco001 table that match the specified arbitrary SQL statement
	 */
	public VciElenco001[] findByDynamicWhere(String sql, Object[] sqlParams) throws VciElenco001DaoException;

}
