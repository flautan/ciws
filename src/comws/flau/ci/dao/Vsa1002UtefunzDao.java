/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package comws.flau.ci.dao;

import comws.flau.ci.dto.*;
import comws.flau.ci.exceptions.*;

public interface Vsa1002UtefunzDao
{
	/** 
	 * Returns all rows from the vsa1002_utefunz table that match the criteria ''.
	 */
	public Vsa1002Utefunz[] findAll() throws Vsa1002UtefunzDaoException;

	/** 
	 * Returns all rows from the vsa1002_utefunz table that match the criteria 'PRG_APP     = :prgApp     AND 
PRG_UTE     = :prgUte     AND 
PRG_PRF_PDR = :prgPrfPdr  AND 
PRG_PRF_FGL = :prgPrfFgl'.
	 */
	public Vsa1002Utefunz[] findWherePrgAppUtePdrFglEquals(int prgApp, int prgUte, int prgPrfPdr, int prgPrfFgl) throws Vsa1002UtefunzDaoException;

	/** 
	 * Returns all rows from the vsa1002_utefunz table that match the criteria 'DES_UTE = :desUte'.
	 */
	public Vsa1002Utefunz[] findWhereDesUteEquals(String desUte) throws Vsa1002UtefunzDaoException;

	/** 
	 * Returns all rows from the vsa1002_utefunz table that match the criteria 'DES_PSW = :desPsw'.
	 */
	public Vsa1002Utefunz[] findWhereDesPswEquals(String desPsw) throws Vsa1002UtefunzDaoException;

	/** 
	 * Returns all rows from the vsa1002_utefunz table that match the criteria 'DES_COG = :desCog'.
	 */
	public Vsa1002Utefunz[] findWhereDesCogEquals(String desCog) throws Vsa1002UtefunzDaoException;

	/** 
	 * Returns all rows from the vsa1002_utefunz table that match the criteria 'DES_NOM = :desNom'.
	 */
	public Vsa1002Utefunz[] findWhereDesNomEquals(String desNom) throws Vsa1002UtefunzDaoException;

	/** 
	 * Returns all rows from the vsa1002_utefunz table that match the criteria 'PRG_APP = :prgApp'.
	 */
	public Vsa1002Utefunz[] findWherePrgAppEquals(int prgApp) throws Vsa1002UtefunzDaoException;

	/** 
	 * Returns all rows from the vsa1002_utefunz table that match the criteria 'DES_PRF_PDR = :desPrfPdr'.
	 */
	public Vsa1002Utefunz[] findWhereDesPrfPdrEquals(String desPrfPdr) throws Vsa1002UtefunzDaoException;

	/** 
	 * Returns all rows from the vsa1002_utefunz table that match the criteria 'DES_PRF = :desPrf'.
	 */
	public Vsa1002Utefunz[] findWhereDesPrfEquals(String desPrf) throws Vsa1002UtefunzDaoException;

	/** 
	 * Returns all rows from the vsa1002_utefunz table that match the criteria 'PRG_PRF_PDR = :prgPrfPdr'.
	 */
	public Vsa1002Utefunz[] findWherePrgPrfPdrEquals(int prgPrfPdr) throws Vsa1002UtefunzDaoException;

	/** 
	 * Returns all rows from the vsa1002_utefunz table that match the criteria 'PRG_PRF_FGL = :prgPrfFgl'.
	 */
	public Vsa1002Utefunz[] findWherePrgPrfFglEquals(int prgPrfFgl) throws Vsa1002UtefunzDaoException;

	/** 
	 * Returns all rows from the vsa1002_utefunz table that match the criteria 'ORD_FNZ = :ordFnz'.
	 */
	public Vsa1002Utefunz[] findWhereOrdFnzEquals(int ordFnz) throws Vsa1002UtefunzDaoException;

	/** 
	 * Returns all rows from the vsa1002_utefunz table that match the criteria 'DES_FNZ = :desFnz'.
	 */
	public Vsa1002Utefunz[] findWhereDesFnzEquals(String desFnz) throws Vsa1002UtefunzDaoException;

	/** 
	 * Returns all rows from the vsa1002_utefunz table that match the criteria 'DES_URL = :desUrl'.
	 */
	public Vsa1002Utefunz[] findWhereDesUrlEquals(String desUrl) throws Vsa1002UtefunzDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the vsa1002_utefunz table that match the specified arbitrary SQL statement
	 */
	public Vsa1002Utefunz[] findByDynamicSelect(String sql, Object[] sqlParams) throws Vsa1002UtefunzDaoException;

	/** 
	 * Returns all rows from the vsa1002_utefunz table that match the specified arbitrary SQL statement
	 */
	public Vsa1002Utefunz[] findByDynamicWhere(String sql, Object[] sqlParams) throws Vsa1002UtefunzDaoException;

}
